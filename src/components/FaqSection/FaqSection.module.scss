@use "sass:math";
@import "../../assests/scss/mixins";
@import "../../assests/scss/variables";

.faqSection {
}

.titleSection {
  @media (max-width: 480px) {
    max-width: rem(180);
  }
}

.grid {
  position: relative;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(rem(290), 1fr));
  gap: rem(15);
  border-top: rem(1) solid #a2a2a2;
  margin-top: rem(30);
}

.faqLeft {
  padding-top: rem(20);
}

.faqLeftDescription {
  font-weight: 400;
  font-size: rem(20);
  line-height: rem(24);

  @media (max-width: 1000px) {
    font-size: clamp(rem(16), 2vw, rem(20));
    line-height: clamp(rem(20), 2.4vw, rem(24));
  }
}

.faqBlock {
  position: relative;
  overflow: hidden;
  cursor: pointer;
  padding: rem(20) 0;

  &::after {
    display: block;
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      269.61deg,
      rgba(183, 173, 211, 0.6) -15.12%,
      rgba(255, 173, 173, 0.132) 107.54%
    );
    color: var(--background-color);
    opacity: 0;
    transition: opacity 0.3s;
    -webkit-transition: opacity 0.3s;
    -moz-transition: opacity 0.3s;
    -ms-transition: opacity 0.3s;
    -o-transition: opacity 0.3s;
  }

  &::before {
    display: block;
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    opacity: 1;
    width: 100%;
    height: rem(1);
    background-color: var(--font-color);
    transition: opacity 0.3s;
    -webkit-transition: opacity 0.3s;
    -moz-transition: opacity 0.3s;
    -ms-transition: opacity 0.3s;
    -o-transition: opacity 0.3s;
  }

  &:hover::after {
    opacity: 1;
  }

  &:hover::before {
    opacity: 0;
  }
}

.title {
  position: relative;
  z-index: 1;
  justify-content: space-between;
  align-items: center;
  gap: rem(20);

  h2 {
    font-weight: 500;
    font-size: rem(20);
    line-height: rem(24);
    padding-right: rem(40);

    @media (max-width: 1000px) {
      font-size: clamp(rem(14), 2vw, rem(20));
      line-height: clamp(rem(18), 2.4vw, rem(24));
    }
  }
}

.iconPlus {
  position: relative;
  display: flex;
  flex-grow: 0;
  flex-shrink: 0;
  width: rem(42);
  height: rem(42);
  align-items: center;
  justify-content: center;

  &::before,
  &::after {
    position: absolute;
    content: "";
    display: block;
    background-color: var(--font-color);
    border-radius: rem(1.5);
    -webkit-border-radius: rem(1.5);
    -moz-border-radius: rem(1.5);
    -ms-border-radius: rem(1.5);
    -o-border-radius: rem(1.5);
  }

  &::before {
    width: 100%;
    height: rem(3);
  }

  &::after {
    width: rem(3);
    height: 100%;
  }

  &__show {
    position: relative;
    display: flex;
    flex-grow: 0;
    flex-shrink: 0;
    width: rem(42);
    height: rem(42);
    align-items: center;
    justify-content: center;

    &::before {
      position: absolute;
      content: "";
      display: block;
      width: 100%;
      height: rem(3);
      background-color: var(--font-color);
      border-radius: rem(1.5);
      -webkit-border-radius: rem(1.5);
      -moz-border-radius: rem(1.5);
      -ms-border-radius: rem(1.5);
      -o-border-radius: rem(1.5);
    }
  }
}

.content {
  height: 0;

  &__show {
    height: auto;
  }
}

.description {
  position: relative;
  z-index: 1;
  font-weight: 400;
  font-size: rem(18);
  line-height: rem(22);
  padding: rem(20) 0;

  @media (max-width: 1000px) {
    font-size: clamp(rem(12), 1.8vw, rem(18));
    line-height: clamp(rem(16), 2.2vw, rem(22));
  }
}

// background Triangle
.triangleBackground {
  position: absolute;
  top: rem(90);
  left: rem(-220);
  width: rem(435);
  height: rem(430);

  @media (max-width: 1440px) {
    left: adaptiv-num-rem(-120, -220, 1440, 768);
  }

  @media (max-width: 768px) {
    width: adaptiv-num-rem(280, 440, 768, 480);
    height: adaptiv-num-rem(275, 431, 768, 480);
    left: adaptiv-num-rem(-140, -220, 768, 480);
  }

  @media (max-width: 480px) {
    width: rem(280);
    height: rem(275);
    top: rem(180);
    left: rem(-140);
  }

  svg {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  & .pathStrokePainted {
    stroke: var(--stroke-colorPainted);
  }
  & .pathStroke {
    stroke: var(--stroke-color);
  }
}
